{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","placeholder","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"8PAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2DC+BRC,E,4MAjCXC,MAAQ,CACJC,KAAM,I,EAGVC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMA,UAAU,UAChBD,SAAUE,KAAKN,cACX,yBAAKK,UAAU,SACX,+CACA,yBAAKA,UAAU,mBACX,2BACAE,YAAY,YACZC,KAAK,OACLC,MAASH,KAAKR,MAAMC,KACpBW,SAAU,SAACC,GAAD,OACV,EAAKC,SAAU,CAACb,KAAMY,EAAEE,OAAOJ,WAC/B,4BAAQJ,UAAU,YAAYG,KAAK,UAAnC,kB,GAxBJM,IAAMC,WCiCfC,G,wDAhCX,WAAab,GAAQ,IAAD,8BAChB,cAAMA,IAWVc,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAACU,WAbf,EAAKH,SAAWL,IAAMW,YAEtB,EAAK3B,MAAQ,CAACwB,MAAO,GAJL,E,gEAQjBhB,KAAKa,SAASC,QAAQM,iBAAiB,OAAQpB,KAAKW,Y,+BAU7C,IAAD,EACuBX,KAAKH,MAAMwB,MAAhCC,EADF,EACEA,YAAaC,EADf,EACeA,KAEpB,OACI,yBAAKC,MAAQ,CAACC,WAAW,QAAD,OAAUzB,KAAKR,MAAMwB,SACzC,yBACAU,IAAK1B,KAAKa,SACVc,IAAKL,EACLM,IAAKL,EAAKM,e,GA3BFrB,IAAMC,YCWfqB,EATG,SAACjC,GACf,IAAMkC,EAASlC,EAAMkC,OAAOC,KAAK,SAACX,GAC9B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAASA,OAGlD,OAAO,yBAAKtB,UAAU,cAAcgC,ICsBrBI,E,4MAxBX3C,MAAQ,CACJuC,OAAQ,I,EAGXK,e,uCAAiB,WAAO3C,GAAP,eAAA4C,EAAA,sEACQC,EACtBC,IAAI,iBAAkB,CACnBC,OAAQ,CAAEC,MAAOhD,KAHN,OACTiD,EADS,OAMf,EAAKpC,SAAS,CAACyB,OAAQW,EAASC,KAAKC,UANtB,2C,6GAUd,OACI,yBAAK7C,UAAU,eAAeyB,MAAO,CAACqB,UAAW,SAC7C,kBAAC,EAAD,CACA/C,SAAUE,KAAKoC,iBACf,kBAAC,EAAD,CAAWL,OAAU/B,KAAKR,MAAMuC,c,GAnB7BvB,IAAMC,WCFzBqC,IAASC,OACP,6BACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.037ae17d.chunk.js","sourcesContent":["import axios from 'axios'; \r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: 'Client-ID 03cgmblJ_Snr4my_EghFjM2GCPjlSCwoUu79fhZ-cXY'\r\n    }\r\n}); ","import React from 'react'; \r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        term: ''\r\n    }; \r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault(); \r\n        this.props.onSubmit(this.state.term); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <form className=\"ui form\"\r\n                onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>Image Search</label>\r\n                        <div className=\"ui action input\">\r\n                            <input  \r\n                            placeholder=\"Search...\"\r\n                            type=\"text\"\r\n                            value = {this.state.term} \r\n                            onChange={(e) => \r\n                            this.setState ({term: e.target.value})}/>\r\n                            <button className=\"ui button\" type=\"submit\">Search</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar; ","import React from 'react'; \r\n\r\nclass ImageCard extends React.Component {\r\n    constructor (props) {\r\n        super(props); \r\n        this.imageRef = React.createRef();\r\n\r\n        this.state = {spans: 0};\r\n    }\r\n\r\n    componentDidMount () {\r\n       this.imageRef.current.addEventListener('load', this.setSpans);  \r\n    }\r\n\r\n    // number of spans for each grid item \r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 10); \r\n        this.setState({spans});  \r\n    }\r\n\r\n    render() {\r\n        const {description, urls} = this.props.image; \r\n\r\n        return (\r\n            <div style= {{gridRowEnd: `span ${this.state.spans}`}}>\r\n                <img\r\n                ref={this.imageRef} \r\n                alt={description} \r\n                src={urls.regular}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard; ","import './imageList.css'; \r\nimport React from 'react'; \r\nimport ImageCard from './ImageCard'; \r\n\r\nconst ImageList = (props) => {\r\n    const images = props.images.map( (image) => {\r\n        return <ImageCard key={image.id} image = {image} /> \r\n    });\r\n\r\nreturn <div className=\"image-list\">{images}</div>\r\n\r\n};\r\n\r\nexport default ImageList; ","import React from 'react'; \r\nimport unsplash from '../api/unsplash'; \r\nimport SearchBar from './SearchBar'; \r\nimport ImageList from './ImageList'; \r\n\r\n\r\nclass App  extends React.Component {\r\n    state = {\r\n        images: []\r\n    };\r\n\r\n     onSearchSubmit = async (term) => {\r\n       const response = await unsplash\r\n       .get('/search/photos', {\r\n           params: { query: term }\r\n       });\r\n\r\n       this.setState({images: response.data.results}); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\" style={{marginTop: '10px'}}>\r\n                <SearchBar\r\n                onSubmit={this.onSearchSubmit}/>\r\n                <ImageList images = {this.state.images}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}